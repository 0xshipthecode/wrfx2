; Copyright (C) 2013-2014 Martin Vejmelka, UC Denver
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
; of the Software, and to permit persons to whom the Software is furnished to do
; so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
; INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
; A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
; HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
; SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(ns postproc
  (require (timelib :as ta) (io_lib :as iol) filename (filelib :joxify) 
           lists (erlang :as erl :joxify) configsrv os)
  (use joxa-core utils))


(defn+ write-raster-kmz-file (uuid wdir sim-from sim-time domain-id var-info-list)
  "Write a (geolocated) raster into a kmz file.  Accepts the simulation time to process, the
   variable and domain id.  A systematic name for the output file is built from the parameters.
   This function is useful if a bundle is desired with a single colorbar in native units of
   the raster, nicely packed into a kmz bundle."
  (let* (kml-dir      (configsrv/get-conf :output-dir)
         sim-time-str (ta/to-esmf-str sim-time)
         wrfout-name  (iol/format "~s/wrfout_d~2..0B_~s" [wdir domain-id (ta/to-esmf-str sim-from)]))
    (filelib/ensure-dir (filename/join [kml-dir uuid "fakefile"]))
    (lists/map (fn (var-info)
                  (let ({var-name var-unit} var-info)
                    (let* (kml-filename (lists/flatten (iol/format "~s-~2..0B-~s.kmz" [sim-time-str domain-id var-name]))
                           kml-path     (filename/join [kml-dir uuid kml-filename])
                           cmd-str      (lists/flatten (iol/format "deps/viswrf/raster2kml.py ~s ~s ~s ~s ~s"
                                                    [wrfout-name var-name var-unit sim-time-str kml-path])))
                      ;(log-info "write-raster-kmz-file invoking command line ~p." [cmd-str])
                      (erl/spawn (fn () (os/cmd cmd-str)))
                      kml-filename)))
                var-info-list)))

(defn+ write-contour-kmz-file (uuid wdir sim-from sim-time domain-id var-list)
  "Extracts a contour from the given variables at the given simulation time.
   Stores the result as a kmz file, whose name is systematically build from the parameters."
  (let* (kml-dir      (configsrv/get-conf :output-dir)
         sim-time-str (ta/to-esmf-str sim-time)
         wrfout-name  (iol/format "~s/wrfout_d~2..0B_~s" [wdir domain-id (ta/to-esmf-str sim-from)]))
    (filelib/ensure-dir (filename/join [kml-dir uuid "fakefile"]))
    (lists/map (fn (var-name)
                 (let* (kml-basename (lists/flatten [sim-time-str "-" var-name ".kmz"])
                        kml-abs-name (filename/join [kml-dir uuid kml-basename])
                        cmd-str (lists/flatten (iol/format "deps/viswrf/contour2kml.py ~s ~s ~s ~s" [wrfout-name var-name sim-time-str kml-abs-name])))
                  ;(log-info "write-contour-kmz-file invoking command line ~p." [cmd-str])
                  (erl/spawn (fn () (os/cmd cmd-str)))
                  kml-basename))
               var-list)))

