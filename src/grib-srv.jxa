(ns grib-srv
    (require gen_server
	     grib-retr
	     (joxa-core :as jxc)))


(defn+ start-link (grib-src stor-dir log-f)
  ; start a new GRIB server and return the PID
  (gen_server/start_link :grib-srv [grib-src stor-dir log-f] []))

;; API

(defn+ retrieve-gribs (srv-pid from to at-time delta log-f)
  (gen_server/call srv-pid {:retrieve-gribs from to at-time delta log-f} :infinity))


;; Internal funcrions

;; gen_server callbacks

(defn+ init (args)
    {:ok args})

(defn+ handle_call (request from state)
  (jxc/let ([grib-src stor-dir log-f] state)
   (case request
	 ({:retrieve-gribs from-time to-time at-time delta}
	  ; GRIB files retrieved here
	  {:reply (grib-retr/retrieve-gribs from-time to-time at-time delta stor-dir grib-src log-f) state})
	 (:stop-grib-srv 
	  ; here a termination must be started
	  {:stop :normal :ok state})
	 (other 
	  (log-f :flash ["grib-srv: message ~p not understood, fix it!" other])
	  {:reply :invalid-request state}))))

(defn+ handle_cast (msg state)
  {:noreply state})

(defn+ handle_info (info state)
  {:noreply state})

(defn+ terminate (reason state)
  :ok)

(defn+ code_change (old-vsn state extra)
  {:ok state})
