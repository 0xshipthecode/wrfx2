; Copyright (C) 2013-2014 Martin Vejmelka, UC Denver
;
; Permission is hereby granted, free of charge, to any person obtaining a copy
; of this software and associated documentation files (the "Software"), to deal
; in the Software without restriction, including without limitation the rights
; to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
; of the Software, and to permit persons to whom the Software is furnished to do
; so, subject to the following conditions:
;
; The above copyright notice and this permission notice shall be included in all
; copies or substantial portions of the Software.
;
; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
; INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR
; A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
; HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
; SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(ns wrfx2
    (require
       jobmaster configsrv logsrv sysmon raws-ingest grib-ingest scheduler perfmon
       inets io (file :joxify) filename crypto
       (application :joxify) (mnesia :joxify)
       (io_lib :as iol) (erlang :as erl :joxify)
       (filelib :joxify) net_adm)
    (use utils))


(defn+ start-logging ()
  "Start the logging subsystem."
  (let* (log-dir (configsrv/get-conf :logging-dir))
    (critical-check :ok (filelib/ensure-dir (filename/join [log-dir "log-file"])))
    (logsrv/start-link log-dir)))


(defn+ start-ingest-system ()
  "Start up the ingest system."
  (let* (ingest-dir (configsrv/get-conf :ingest-storage-dir))
    (critical-check :ok (filelib/ensure-dir (filename/join [ingest-dir "fake-file"])))
    (critical-check :ok (logsrv/create-log "raws-ingest"))
    (raws-ingest/start-link (logsrv/make-log-f "raws-ingest"))
    (critical-check :ok (logsrv/create-log "grib-ingest"))
    (grib-ingest/start-link ingest-dir (logsrv/make-log-f "grib-ingest"))))


(defn+ start-otp-subsystem ()
  "Start the OTP subsystems required for wrfx2 platform services."
  (inets/start)
  (mnesia/create-schema [(erl/node)])
  (mnesia/start)
  (crypto/start))


(defn+ start ()
  ; start the configuation server
  (configsrv/start-link)
  ; sset the mnesia database dir from config (before starting mnesia!)
  (application/set-env :mnesia :dir (configsrv/get-conf :mnesia-dir))
  ; start otp subsystems that we need
  (start-otp-subsystem)
  ; start logging subsystem
  (start-logging)
  ; initialize the performance tracking and instrumentation library
  (perfmon/initialize (logsrv/make-log-f "system"))
  ; start the ingest system
  (start-ingest-system)
  ; start the job manager
  (jobmaster/start-link)
  ; start the system monitor
  (sysmon/start-link)
  ; start scheduler
  (logsrv/create-log "scheduler")
  (scheduler/start-link (logsrv/make-log-f "scheduler"))
  ; we are ready to go
  (logsrv/msg "system" :info "wrfx2 startup complete" [])
  ; check if the webserver is up, if yes, connect
  (net_adm/ping :wrfx2web@gross))


