(ns fire-sim
  (require wrfxlib
           nlist
           plist
           filesys
           log-srv
           ingest-srv
           filename
           (time-arith :as ta)
           (file :joxify)
           (erlang :as erl :joxify))
  (use joxa-core utils))


(defn+ make-geogrid-namelist (nls wps-dir args)
  "Fill out entries relevant to geogrid in the namelist <nls> and write the namelist into
   the wps working directory <wps-dir>.  Retrieve job parameters from <args>"
  (let* (wps-geog-dir (plist/get :wps-geog-dir args)
         nls1 (nlist/set-entry "geogrid" "geog_data_path" wps-geog-dir nls))
    nls1))


(defn+ make-ungrib-namelist (nls cov-from cov-to doms)
  "Set the start/end times for WPS to <cov-from>/<cov-to> for domains <doms>
   in the wps namelist <nls>."
  (let* (nls1 (nlist/set-wps-start-time nls cov-from doms)
         nls2 (nlist/set-wps-end-time nls1 cov-to doms))
    nls2))


(defn+ run (args)
  "Execute the fire-simulation job with the given arguments:
   ign-when: start of the fire as a GMT time
   ign-where: ignition of the fire
   job-id: unique identifier of the job
   work-dir: working directory
   wrf-inst-dir: WRF installation directory
   wps-inst-dir: WPS installation directory
   wps-geog-dir: WPS geography data directory
   grib-src: name of the GRIB source"
  (let ([job-id work-dir wps-idir wrf-idir] (plist/get-list [:job-id :work-dir :wps-idir :wrf-idir ] args)
        [grib-src ign-when ign-where]       (plist/get-list [:grib-src :ign-when :ign-where] args)
        sim-from        (ta/shift-by-hours ign-when -2)
        sim-to          (ta/shift-by-hours ign-when  6)
        {:ok _ log-f}   (log-srv/create-log job-id [])
        wps-wdir        (filename/join (work-dir "wps"))
        ; step 1:  construct innermost domain from ignition point and add it to the namelist,
        ;          and write namelist to working directory,
        wps-nl1         (make-geogrid-namelist (nlist/parse "etc/nlists/barker_fire.wps" :barker_wps0) wps-wdir args))

    ; create the working directory for WPS
    (!!= :ok (filesys/create-dir wps-wdir))
    (!!= :ok (file/write-file (filename/join wps-wdir "namelist.wps") wps-nl1))

    (wrfxlib/run-geogrid wps-wdir log-f)
    (let ({cov-from cov-to mfest}   (ingest-srv/retrieve-gribs grib-src sim-from sim-to sim-from 0 3600000)
          wps-nl2                   (make-ungrib-namelist wps-nl1 cov-from cov-to (nlist/all-domains wps-nl1)))
      (wrfxlib/symlink-grib-files mfest wps-wdir)
      (file/write-file (filename/join wps-wdir "namelist.wps") wps-nl2))

    (wrfxlib/run-ungrib wps-wdir log-f)))

(defn+ test ()
  (run [ {:ign-when {{2012 9 9} {4 0 0}}}
         {:ign-where { 13.1 123.5 }}
         {:work-dir "wksp"}
         {:wrf-inst-dir "/home/mvejmelka/Packages/op-wrf-fire/WRFV3"}
         {:wps-inst-dir "/home/mvejmelka/Packages/op-wrf-fire/WPS"}
         {:wps-geog-dir "/home/mvejmelka/Packages/WPS-GEOG"}
         {:grib-src "nam_218"} ]))


